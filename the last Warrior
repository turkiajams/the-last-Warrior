
    def __init__(self, nombre):
        self.nombre = nombre
        self.vida = 100
        self.energia = 50
        self.ataque = 25
        self.defensa = 40
        self.nivel = 1
        self.experiencia = 0
        self.experiencia_necesaria = 100

    def level_up(self):
        if self.experiencia >= self.experiencia_para_siguiente_nivel:
            self.nivel += 1
            self.experiencia -= self.experiencia_para_siguiente_nivel
            self.experiencia_para_siguiente_nivel = int(self.experiencia_para_siguiente_nivel * 1.2)
            self.vida += 10
            self.energia += 5
            self.ataque += 5
            self.defensa += 5

class acciones:
     def atacar(self, enemigo):
        dano = self.ataque - enemigo.defensa
        if dano < class Personaje:0:
            dano = 0
        enemigo.vida -= dano
        self.energia -= 10
        if enemigo.vida < 0:
            enemigo.vida = 0

     def recibir_ataque(self, enemigo):
        defensa_efectiva = self.defensa - (self.defensa // 20) * 3
        dano = enemigo.ataque - defensa_efectiva
        if dano < 0:
            dano = 0
        self.vida -= dano
        if self.vida < 0:
            self.vida = 0  

     def defender(self):
        if self.energia < 5:
            print("No tienes suficiente energía para realizar esta acción.")
            return
        self.defensa += 10
        self.energia -= 5
        print(f"{self.nombre} ha aumentado su defensa en 10 puntos. Su defensa actual es {self.defensa}.")

     
class Monstruo:
    def __init__(self, nivel_personaje):
        self.vida = 60 + (nivel_personaje - 1) * 10
        self.dano = 20 + (nivel_personaje - 1) * 5
        self.energia = 30 + (nivel_personaje - 1) * 5
        self.defensa = 20 + (nivel_personaje - 1) * 5
        self.nivel = nivel_personaje - 2 if nivel_personaje > 3 else 1
        self.experiencia = 10 * self.nivel
    
    def atacar(self, personaje):
        dano_realizado = self.dano - personaje.defensa
        if dano_realizado < 0:
            dano_realizado = 0
        personaje.vida -= dano_realizado
        print(f"{self.__class__.__name__} ha atacado a {personaje.nombre} por {dano_realizado} puntos de daño.")
    
    def recibir_dano(self, dano):
        self.vida -= dano
        print(f"{self.__class__.__name__} ha recibido {dano} puntos de daño.")
        if self.vida <= 0:
            print(f"{self.__class__.__name__} ha sido derrotado!")
    
    def auto_regular_vida(self, nivel_personaje):
        nivel_monstruo = self.nivel
        if nivel_monstruo >= nivel_personaje + 3:
            self.vida = 60 + (nivel_personaje + 2) * 10
        elif nivel_monstruo <= nivel_personaje - 2:
            self.vida = 60 + (nivel_personaje - 3) * 10
    
    def dar_experiencia(self):
        experiencia = self.experiencia
        print(f"{self.__class__.__name__} ha dado {experiencia} puntos de experiencia.")
        return experiencia
    def __init__(self, nivel_personaje):
        self.vida = 60 + (nivel_personaje - 1) * 10
        self.dano = 20 + (nivel_personaje - 1) * 5
        self.energia = 30 + (nivel_personaje - 1) * 5
        self.defensa = 20 + (nivel_personaje - 1) * 5
        self.nivel = nivel_personaje - 2 if nivel_personaje > 3 else 1
        self.experiencia = 10 * self.nivel 

        